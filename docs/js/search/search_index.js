var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,0.857,1,1.392]],["body/controllers/AppController.html",[0,1.156,1,1.878,2,0.852,3,0.606,4,0.502,5,0.502,6,1.995,7,0.852,8,1.595,9,3.299,10,1.995,11,0.062,12,1.995,13,3.431,14,2.709,15,1.175,16,2.527,17,1.175,18,1.878,19,0.934,20,0.502,21,2.709,22,1.645,23,1.542,24,1.995,25,0.606,26,0.606,27,1.645,28,1.645,29,1.995,30,1.175,31,2.527,32,0.042,33,0.042]],["title/modules/AppModule.html",[34,0.857,35,1.392]],["body/modules/AppModule.html",[1,1.984,2,1.052,3,0.529,4,0.438,5,0.438,11,0.061,19,0.997,20,0.438,23,1.71,24,1.741,25,0.529,26,0.529,32,0.038,33,0.038,34,1.221,35,2.56,36,0.873,37,0.873,38,1.207,39,1.207,40,0.873,41,1.984,42,1.207,43,1.741,44,1.741,45,1.741,46,2.007,47,2.007,48,1.709,49,1.207,50,1.025,51,2.205,52,3.122,53,2.205,54,2.205,55,2.205]],["title/injectables/AppService.html",[23,1.007,56,0.857]],["body/injectables/AppService.html",[3,0.709,4,0.587,5,0.587,7,0.997,8,1.77,9,3.51,11,0.06,15,1.375,17,1.375,18,2.085,19,0.709,20,0.587,23,1.508,25,0.709,26,0.709,30,1.375,32,0.047,33,0.047,56,1.283,57,1.62,58,2.336,59,2.958,60,2.958,61,2.958]],["title/controllers/PostController.html",[0,0.857,62,1.392]],["body/controllers/PostController.html",[0,1.324,2,1.047,3,0.745,4,0.617,5,0.617,11,0.061,19,0.942,20,0.617,25,0.745,26,0.745,27,2.022,28,2.022,32,0.048,33,0.048,62,2.151,63,2.453,64,1.706,65,2.453]],["title/injectables/PostService.html",[56,0.857,64,1.007]],["body/injectables/PostService.html",[3,0.704,4,0.583,5,0.583,7,0.99,8,1.762,11,0.06,15,1.366,17,1.366,18,1.609,19,0.704,20,0.583,25,0.704,26,0.704,30,1.366,32,0.047,33,0.047,56,1.278,57,1.609,64,1.501,66,2.32,67,2.732,68,4.434,69,2.938,70,2.938]],["title/modules/PostsModule.html",[34,0.857,46,1.182]],["body/modules/PostsModule.html",[2,1.17,3,0.616,4,0.51,5,0.51,11,0.06,19,0.942,20,0.51,25,0.616,26,0.616,32,0.043,33,0.043,34,1.325,36,1.018,37,1.018,38,1.408,39,1.408,40,1.018,41,2.152,42,1.408,46,2.105,48,1.901,49,1.408,50,1.195,62,2.152,64,1.793,65,2.031,71,2.031,72,2.031,73,2.572,74,2.572]],["title/injectables/UserService.html",[56,0.857,75,1.007]],["body/injectables/UserService.html",[3,0.521,4,0.431,5,0.431,7,0.732,8,1.435,11,0.062,15,1.435,17,1.435,19,0.521,20,0.431,25,0.521,26,0.521,30,1.435,32,0.038,33,0.038,56,1.041,57,1.189,67,2.797,75,1.223,76,1.715,77,3.914,78,3.088,79,2.172,80,3.088,81,2.837,82,2.172,83,1.715,84,3.09,85,1.414,86,1.715,87,3.09,88,3.088,89,3.594,90,3.594,91,3.088,92,2.172,93,2.172,94,2.172]],["title/controllers/UsersController.html",[0,0.857,95,1.392]],["body/controllers/UsersController.html",[0,0.442,2,0.442,3,0.314,4,0.26,5,0.26,7,0.442,8,0.979,10,2.083,11,0.06,12,1.035,14,1.035,15,1.226,17,1.226,18,0.718,19,0.632,20,0.26,21,2.385,22,0.853,25,0.314,26,0.314,27,0.853,28,0.853,29,2.083,30,1.226,32,0.026,33,0.026,67,2.592,75,0.834,81,3.357,83,1.662,84,2.385,85,2.299,86,1.662,87,2.789,95,1.153,96,1.035,97,1.311,98,2.638,99,2.105,100,3.02,101,2.105,102,1.311,103,3.308,104,1.311,105,2.105,106,1.311,107,3.02,108,3.02,109,1.966,110,3.858,111,1.662,112,2.105,113,2.385,114,1.311,115,2.105,116,2.105,117,2.105,118,2.638,119,2.105,120,1.311,121,1.662,122,1.311,123,1.311,124,1.311,125,2.105,126,1.662,127,1.311,128,2.105,129,1.311,130,1.311,131,1.311,132,2.638,133,2.638,134,1.311,135,2.105,136,2.105,137,1.311,138,1.035,139,1.311,140,1.311,141,1.311,142,1.311,143,1.311,144,1.311,145,1.311,146,1.311,147,1.035,148,1.311,149,1.311,150,1.311,151,1.311,152,1.311]],["title/modules/UsersModule.html",[34,0.857,47,1.182]],["body/modules/UsersModule.html",[2,1.17,3,0.616,4,0.51,5,0.51,11,0.06,19,0.942,20,0.51,25,0.616,26,0.616,32,0.043,33,0.043,34,1.325,36,1.018,37,1.018,38,1.408,39,1.408,40,1.018,41,2.152,42,1.408,47,2.105,48,1.901,49,1.408,50,1.195,75,1.793,95,2.152,138,2.031,153,2.031,154,2.031,155,2.572,156,2.572]],["title/coverage.html",[157,2.243]],["body/coverage.html",[0,1.349,1,1.46,5,0.529,6,2.106,11,0.059,23,1.056,32,0.044,33,0.044,40,1.056,56,1.349,58,2.106,62,1.46,63,2.106,64,1.056,66,2.106,75,1.056,76,2.106,85,1.736,95,1.46,96,2.106,147,2.106,157,1.736,158,2.106,159,2.667,160,2.667,161,4.672,162,4.003,163,2.106,164,2.667,165,3.557,166,2.667,167,2.667,168,2.667,169,2.667]],["title/dependencies.html",[37,1.209,170,1.687]],["body/dependencies.html",[11,0.061,20,0.635,22,2.082,32,0.049,33,0.049,37,1.267,171,3.198,172,3.198,173,4.366,174,3.198,175,3.198,176,3.198,177,3.198,178,3.198,179,3.198,180,3.198,181,3.198,182,3.198]],["title/miscellaneous/functions.html",[183,1.687,184,2.41]],["body/miscellaneous/functions.html",[7,1.223,11,0.053,32,0.053,33,0.053,40,1.827,163,2.864,183,2.864,184,2.864,185,3.627]],["title/index.html",[7,0.72,186,2.136,187,2.136]],["body/index.html",[4,0.245,11,0.055,32,0.025,33,0.025,50,1.596,109,0.802,111,0.973,113,2.3,121,0.973,126,0.973,157,0.802,158,1.582,188,1.233,189,1.233,190,2.53,191,2.003,192,1.233,193,1.233,194,1.233,195,1.233,196,2.003,197,2.53,198,1.233,199,1.233,200,1.233,201,2.913,202,1.233,203,3.77,204,1.233,205,3.618,206,1.233,207,1.233,208,1.233,209,2.003,210,1.233,211,2.003,212,1.233,213,2.53,214,1.233,215,2.003,216,1.233,217,1.233,218,1.233,219,1.233,220,1.233,221,2.913,222,3.77,223,3.434,224,1.233,225,2.003,226,1.233,227,1.233,228,1.233,229,1.233,230,1.233,231,3.434,232,2.003,233,2.913,234,2.003,235,1.233,236,1.233,237,2.003,238,3.205,239,2.913,240,1.233,241,2.003,242,1.233,243,1.233,244,1.233,245,1.233,246,2.913,247,1.233,248,1.233,249,1.233,250,1.233,251,1.233,252,2.003,253,1.233,254,1.233,255,1.233,256,1.233,257,1.233,258,2.003,259,1.233,260,1.233,261,1.233,262,2.003,263,1.233,264,1.233,265,2.3,266,2.003,267,1.233,268,1.233,269,1.233,270,1.233,271,1.233,272,1.233,273,1.233,274,1.233,275,2.003,276,1.233,277,1.233,278,1.233,279,1.233,280,2.53,281,1.233,282,1.233,283,1.233,284,1.233,285,1.233,286,1.233,287,2.003,288,1.233,289,1.233,290,1.233,291,1.233,292,1.233,293,2.003,294,1.233,295,1.233,296,1.233,297,2.003,298,2.003,299,1.233,300,1.233,301,1.233,302,1.233,303,1.233,304,1.233,305,1.233,306,1.233,307,1.233,308,1.233,309,0.973,310,1.233,311,1.233,312,1.233,313,1.233,314,1.233,315,0.973]],["title/modules.html",[36,1.365]],["body/modules.html",[11,0.051,32,0.051,33,0.051,35,1.861,36,1.346,46,1.58,47,1.58,265,3.543,316,4.487,317,4.487,318,4.487]],["title/overview.html",[319,2.721]],["body/overview.html",[2,0.867,11,0.057,23,1.556,32,0.043,33,0.043,34,0.867,35,2.577,36,1.018,37,1.018,38,1.408,39,1.408,40,1.018,41,1.408,42,1.408,43,2.031,44,2.031,45,2.031,46,2.043,47,2.043,48,1.901,49,1.408,50,1.195,57,1.408,64,1.556,71,2.031,72,2.031,75,1.556,153,2.031,154,2.031,319,2.031,320,3.93]],["title/properties.html",[170,1.687,321,2.41]],["body/properties.html",[11,0.061,32,0.052,33,0.052,109,2.303,309,2.794,315,2.794,321,2.794,322,3.538,323,3.538,324,3.538]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"modules/PostsModule.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":161,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":323,"title":{},"body":{"properties.html":{}}}],["0.2.2",{"_index":180,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":165,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":162,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":166,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":167,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":88,"title":{},"body":{"injectables/UserService.html":{}}}],["1.1.26",{"_index":172,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":119,"title":{},"body":{"controllers/UsersController.html":{}}}],["109812",{"_index":144,"title":{},"body":{"controllers/UsersController.html":{}}}],["109812})@apiquery({name",{"_index":114,"title":{},"body":{"controllers/UsersController.html":{}}}],["11.0.1",{"_index":173,"title":{},"body":{"dependencies.html":{}}}],["11.1.5",{"_index":177,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":92,"title":{},"body":{"injectables/UserService.html":{}}}],["3",{"_index":320,"title":{},"body":{"overview.html":{}}}],["7.8.1",{"_index":182,"title":{},"body":{"dependencies.html":{}}}],["add",{"_index":125,"title":{},"body":{"controllers/UsersController.html":{}}}],["allowing",{"_index":253,"title":{},"body":{"index.html":{}}}],["amazing",{"_index":303,"title":{},"body":{"index.html":{}}}],["apioperation",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["apiparam",{"_index":135,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiquery",{"_index":136,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags",{"_index":137,"title":{},"body":{"controllers/UsersController.html":{}}}],["apitags(\"users",{"_index":139,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":223,"title":{},"body":{"index.html":{}}}],["applications",{"_index":196,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":35,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":23,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["author",{"_index":309,"title":{},"body":{"index.html":{},"properties.html":{}}}],["aws",{"_index":241,"title":{},"body":{"index.html":{}}}],["backers",{"_index":304,"title":{},"body":{"index.html":{}}}],["based",{"_index":236,"title":{},"body":{"index.html":{}}}],["board",{"_index":296,"title":{},"body":{"index.html":{}}}],["body",{"_index":129,"title":{},"body":{"controllers/UsersController.html":{}}}],["bootstrap",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":318,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":316,"title":{},"body":{"modules.html":{}}}],["building",{"_index":191,"title":{},"body":{"index.html":{}}}],["channel",{"_index":268,"title":{},"body":{"index.html":{}}}],["check",{"_index":231,"title":{},"body":{"index.html":{}}}],["class",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"modules/PostsModule.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["clicks",{"_index":252,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":235,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":71,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_providers",{"_index":72,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":153,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":154,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":259,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":171,"title":{},"body":{"dependencies.html":{}}}],["console.log(req",{"_index":151,"title":{},"body":{"controllers/UsersController.html":{}}}],["constructor(private",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"controllers/PostController.html":{},"controllers/UsersController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/PostController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/PostController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('users",{"_index":140,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/PostController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["courses",{"_index":274,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":157,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["declarations",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":270,"title":{},"body":{"index.html":{}}}],["default",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["defaultvaluepipe",{"_index":130,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(10",{"_index":148,"title":{},"body":{"controllers/UsersController.html":{}}}],["defined",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["dependencies",{"_index":37,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":221,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":240,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":232,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":251,"title":{},"body":{"index.html":{}}}],["description",{"_index":109,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":206,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":282,"title":{},"body":{"index.html":{}}}],["discord",{"_index":267,"title":{},"body":{"index.html":{}}}],["dive",{"_index":269,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":158,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doe",{"_index":93,"title":{},"body":{"injectables/UserService.html":{}}}],["e2e",{"_index":216,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":192,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":229,"title":{},"body":{"index.html":{}}}],["email",{"_index":90,"title":{},"body":{"injectables/UserService.html":{}}}],["ensure",{"_index":227,"title":{},"body":{"index.html":{}}}],["enteries",{"_index":115,"title":{},"body":{"controllers/UsersController.html":{}}}],["enterprise",{"_index":286,"title":{},"body":{"index.html":{}}}],["example",{"_index":113,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["experience",{"_index":272,"title":{},"body":{"index.html":{}}}],["export",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"modules/PostsModule.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["exports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":176,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":108,"title":{},"body":{"controllers/UsersController.html":{}}}],["fast",{"_index":244,"title":{},"body":{"index.html":{}}}],["features",{"_index":255,"title":{},"body":{"index.html":{}}}],["few",{"_index":246,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"modules/PostsModule.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["findall",{"_index":77,"title":{},"body":{"injectables/UserService.html":{}}}],["findonybyid",{"_index":78,"title":{},"body":{"injectables/UserService.html":{}}}],["findonybyid(id",{"_index":80,"title":{},"body":{"injectables/UserService.html":{}}}],["findposts",{"_index":68,"title":{},"body":{"injectables/PostService.html":{}}}],["focus",{"_index":254,"title":{},"body":{"index.html":{}}}],["follow",{"_index":290,"title":{},"body":{"index.html":{}}}],["framework",{"_index":190,"title":{},"body":{"index.html":{}}}],["full",{"_index":285,"title":{},"body":{"index.html":{}}}],["function",{"_index":164,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":184,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["g",{"_index":249,"title":{},"body":{"index.html":{}}}],["get(\"/:id",{"_index":143,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id/')@apioperation({summary",{"_index":104,"title":{},"body":{"controllers/UsersController.html":{}}}],["get()@apioperation({summary",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getnewuser",{"_index":99,"title":{},"body":{"controllers/UsersController.html":{}}}],["getnewuser(@param('id",{"_index":145,"title":{},"body":{"controllers/UsersController.html":{}}}],["getnewuser(id",{"_index":102,"title":{},"body":{"controllers/UsersController.html":{}}}],["getting",{"_index":186,"title":{"index.html":{}},"body":{}}],["getusers",{"_index":100,"title":{},"body":{"controllers/UsersController.html":{}}}],["graph",{"_index":277,"title":{},"body":{"index.html":{}}}],["grow",{"_index":300,"title":{},"body":{"index.html":{}}}],["hands",{"_index":271,"title":{},"body":{"index.html":{}}}],["handy",{"_index":260,"title":{},"body":{"index.html":{}}}],["hello",{"_index":60,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":275,"title":{},"body":{"index.html":{}}}],["here",{"_index":121,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["https://nestjs.com",{"_index":312,"title":{},"body":{"index.html":{}}}],["id",{"_index":87,"title":{},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["identifier",{"_index":159,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"modules/PostsModule.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["imports",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"modules/PostsModule.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["information",{"_index":111,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["infrastructure",{"_index":257,"title":{},"body":{"index.html":{}}}],["injectable",{"_index":56,"title":{"injectables/AppService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":57,"title":{},"body":{"injectables/AppService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["install",{"_index":248,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":204,"title":{},"body":{"index.html":{}}}],["interact",{"_index":278,"title":{},"body":{"index.html":{}}}],["job",{"_index":293,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":295,"title":{},"body":{"index.html":{}}}],["john",{"_index":89,"title":{},"body":{"injectables/UserService.html":{}}}],["john@gmail.com",{"_index":91,"title":{},"body":{"injectables/UserService.html":{}}}],["johndoe@gmail.com",{"_index":94,"title":{},"body":{"injectables/UserService.html":{}}}],["join",{"_index":306,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":310,"title":{},"body":{"index.html":{}}}],["key",{"_index":224,"title":{},"body":{"index.html":{}}}],["learn",{"_index":263,"title":{},"body":{"index.html":{}}}],["legend",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":315,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":298,"title":{},"body":{"index.html":{}}}],["limit",{"_index":103,"title":{},"body":{"controllers/UsersController.html":{}}}],["linkedin",{"_index":292,"title":{},"body":{"index.html":{}}}],["looking",{"_index":234,"title":{},"body":{"index.html":{}}}],["loop",{"_index":288,"title":{},"body":{"index.html":{}}}],["makes",{"_index":242,"title":{},"body":{"index.html":{}}}],["managing",{"_index":256,"title":{},"body":{"index.html":{}}}],["matching",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"modules/PostsModule.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mau",{"_index":238,"title":{},"body":{"index.html":{}}}],["metadata",{"_index":179,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["miscellaneous",{"_index":183,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["mit",{"_index":297,"title":{},"body":{"index.html":{}}}],["mode",{"_index":209,"title":{},"body":{"index.html":{}}}],["module",{"_index":34,"title":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":36,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":233,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":311,"title":{},"body":{"index.html":{}}}],["name",{"_index":84,"title":{},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["need",{"_index":283,"title":{},"body":{"index.html":{}}}],["nest",{"_index":197,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":314,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":222,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"modules/PostsModule.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":174,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mau",{"_index":250,"title":{},"body":{"index.html":{}}}],["nestjs/platform",{"_index":175,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":147,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["node.js",{"_index":189,"title":{},"body":{"index.html":{}}}],["npm",{"_index":203,"title":{},"body":{"index.html":{}}}],["number",{"_index":81,"title":{},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["offer",{"_index":294,"title":{},"body":{"index.html":{}}}],["official",{"_index":239,"title":{},"body":{"index.html":{}}}],["open",{"_index":299,"title":{},"body":{"index.html":{}}}],["optional",{"_index":86,"title":{},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["out",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":319,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":170,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":131,"title":{},"body":{"controllers/UsersController.html":{}}}],["parameters",{"_index":83,"title":{},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["parseintpipe",{"_index":132,"title":{},"body":{"controllers/UsersController.html":{}}}],["part",{"_index":284,"title":{},"body":{"index.html":{}}}],["per",{"_index":117,"title":{},"body":{"controllers/UsersController.html":{}}}],["platform",{"_index":237,"title":{},"body":{"index.html":{}}}],["please",{"_index":266,"title":{},"body":{"index.html":{}}}],["possible",{"_index":230,"title":{},"body":{"index.html":{}}}],["post",{"_index":133,"title":{},"body":{"controllers/UsersController.html":{}}}],["post()@apioperation({summary",{"_index":124,"title":{},"body":{"controllers/UsersController.html":{}}}],["post.controller",{"_index":74,"title":{},"body":{"modules/PostsModule.html":{}}}],["post.service",{"_index":65,"title":{},"body":{"controllers/PostController.html":{},"modules/PostsModule.html":{}}}],["postcontroller",{"_index":62,"title":{"controllers/PostController.html":{}},"body":{"controllers/PostController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["posts",{"_index":70,"title":{},"body":{"injectables/PostService.html":{}}}],["posts/posts.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["postservice",{"_index":64,"title":{"injectables/PostService.html":{}},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{},"modules/PostsModule.html":{},"coverage.html":{},"overview.html":{}}}],["postsmodule",{"_index":46,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postuser",{"_index":101,"title":{},"body":{"controllers/UsersController.html":{}}}],["postuser(@body",{"_index":150,"title":{},"body":{"controllers/UsersController.html":{}}}],["postuser(req",{"_index":123,"title":{},"body":{"controllers/UsersController.html":{}}}],["prefix",{"_index":97,"title":{},"body":{"controllers/UsersController.html":{}}}],["production",{"_index":211,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":188,"title":{},"body":{"index.html":{}}}],["project",{"_index":201,"title":{},"body":{"index.html":{}}}],["properties",{"_index":321,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["providers",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/users.service",{"_index":138,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":67,"title":{},"body":{"injectables/PostService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["query",{"_index":134,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('limit",{"_index":146,"title":{},"body":{"controllers/UsersController.html":{}}}],["questions",{"_index":264,"title":{},"body":{"index.html":{}}}],["read",{"_index":307,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/PostController.html":{},"controllers/UsersController.html":{}}}],["ready",{"_index":220,"title":{},"body":{"index.html":{}}}],["real",{"_index":279,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":178,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":200,"title":{},"body":{"index.html":{}}}],["req",{"_index":128,"title":{},"body":{"controllers/UsersController.html":{}}}],["request",{"_index":118,"title":{},"body":{"controllers/UsersController.html":{}}}],["required",{"_index":107,"title":{},"body":{"controllers/UsersController.html":{}}}],["requiring",{"_index":245,"title":{},"body":{"index.html":{}}}],["reset",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":258,"title":{},"body":{"index.html":{}}}],["results",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"modules/PostsModule.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["returned",{"_index":116,"title":{},"body":{"controllers/UsersController.html":{}}}],["returns",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PostService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["route",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["run",{"_index":205,"title":{},"body":{"index.html":{}}}],["runs",{"_index":228,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":181,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":193,"title":{},"body":{"index.html":{}}}],["send",{"_index":152,"title":{},"body":{"controllers/UsersController.html":{}}}],["sepcific",{"_index":112,"title":{},"body":{"controllers/UsersController.html":{}}}],["server",{"_index":194,"title":{},"body":{"index.html":{}}}],["setup",{"_index":202,"title":{},"body":{"index.html":{}}}],["side",{"_index":195,"title":{},"body":{"index.html":{}}}],["simple",{"_index":247,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"modules/PostsModule.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["specific",{"_index":105,"title":{},"body":{"controllers/UsersController.html":{}}}],["sponsors",{"_index":302,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":185,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":16,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":58,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["src/main.ts",{"_index":163,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/post.controller.ts",{"_index":63,"title":{},"body":{"controllers/PostController.html":{},"coverage.html":{}}}],["src/posts/post.service.ts",{"_index":66,"title":{},"body":{"injectables/PostService.html":{},"coverage.html":{}}}],["src/posts/post.service.ts:5",{"_index":69,"title":{},"body":{"injectables/PostService.html":{}}}],["src/posts/posts.module.ts",{"_index":73,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/users/providers/users.service.ts",{"_index":76,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:20",{"_index":82,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/providers/users.service.ts:5",{"_index":79,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/users.controller.ts",{"_index":96,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:15",{"_index":122,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:36",{"_index":120,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:45",{"_index":127,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module.ts",{"_index":155,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":207,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":210,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":212,"title":{},"body":{"index.html":{}}}],["started",{"_index":187,"title":{"index.html":{}},"body":{}}],["starter",{"_index":199,"title":{},"body":{"index.html":{}}}],["statements",{"_index":160,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":287,"title":{},"body":{"index.html":{}}}],["steps",{"_index":225,"title":{},"body":{"index.html":{}}}],["straightforward",{"_index":243,"title":{},"body":{"index.html":{}}}],["string",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/PostService.html":{},"controllers/UsersController.html":{}}}],["summary",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":265,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":317,"title":{},"body":{"modules.html":{}}}],["table",{"_index":169,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":168,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":226,"title":{},"body":{"index.html":{}}}],["test",{"_index":215,"title":{},"body":{"index.html":{}}}],["test:covdeployment",{"_index":218,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":217,"title":{},"body":{"index.html":{}}}],["tests",{"_index":213,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":301,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["this.usersservice.findall",{"_index":142,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findonybyid(id",{"_index":149,"title":{},"body":{"controllers/UsersController.html":{}}}],["time",{"_index":280,"title":{},"body":{"index.html":{}}}],["touch",{"_index":308,"title":{},"body":{"index.html":{}}}],["twitter",{"_index":313,"title":{},"body":{"index.html":{}}}],["type",{"_index":85,"title":{},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["typescript",{"_index":198,"title":{},"body":{"index.html":{}}}],["unit",{"_index":214,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":324,"title":{},"body":{"properties.html":{}}}],["updates",{"_index":289,"title":{},"body":{"index.html":{}}}],["user",{"_index":110,"title":{},"body":{"controllers/UsersController.html":{}}}],["user'})@apiparam({name",{"_index":106,"title":{},"body":{"controllers/UsersController.html":{}}}],["users",{"_index":98,"title":{},"body":{"controllers/UsersController.html":{}}}],["users.controller",{"_index":156,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/users.module",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["userscontroller",{"_index":95,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":75,"title":{"injectables/UserService.html":{}},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["usersmodule",{"_index":47,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":141,"title":{},"body":{"controllers/UsersController.html":{}}}],["using",{"_index":281,"title":{},"body":{"index.html":{}}}],["version",{"_index":322,"title":{},"body":{"properties.html":{}}}],["video",{"_index":273,"title":{},"body":{"index.html":{}}}],["visit",{"_index":262,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":276,"title":{},"body":{"index.html":{}}}],["watch",{"_index":208,"title":{},"body":{"index.html":{}}}],["website",{"_index":126,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["working",{"_index":261,"title":{},"body":{"index.html":{}}}],["world",{"_index":61,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":291,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":305,"title":{},"body":{"index.html":{}}}],["you're",{"_index":219,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                        \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Default Route'})\n                \n            \n\n                    \n                        \n                            Defined in src/app.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { ApiOperation } from '@nestjs/swagger';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) { }\n\n  @Get()\n  @ApiOperation({\n    summary: \"Default Route\"\n  })\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nPostsModule\n\nPostsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PostsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from './users/users.module';\nimport { PostsModule } from './posts/posts.module';\n\n@Module({\n  imports: [UsersModule, PostsModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostController.html":{"url":"controllers/PostController.html","title":"controller - PostController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/post.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from \"@nestjs/common\";\nimport { PostService } from \"./post.service\";\n\n@Controller()\nexport class PostController {\n\n    constructor(private readonly postService: PostService) { }\n\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostService.html":{"url":"injectables/PostService.html","title":"injectable - PostService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/post.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                FindPosts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        FindPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    FindPosts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/post.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class PostService {\n    public FindPosts() {\n        return \"All Posts\"\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\n\nPostService\n\nPostService\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nPostService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostController } from './post.controller';\nimport { PostService } from './post.service';\n\n@Module({\n    controllers: [PostController],\n    providers: [PostService]\n})\nexport class PostsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findOnyById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     {}\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findOnyById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findOnyById(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:20\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from \"@nestjs/common\";\n\n@Injectable()\nexport class UserService {\n    public findAll() {\n        return [\n            {\n                id: 1,\n                name: \"John\",\n                email: \"john@gmail.com\"\n            },\n            {\n                id: 2,\n                name: \"John Doe\",\n                email: \"johndoe@gmail.com\"\n            }\n        ]\n    }\n\n    public findOnyById(id: number) {\n        return [\n            {\n                id: 1,\n                name: \"John\",\n                email: \"john@gmail.com\"\n            }\n        ]\n\n    }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getNewUser\n                            \n                            \n                                    \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    \n                                    Public\n                                postUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Public\n                        getNewUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getNewUser(id: number, limit: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id/')@ApiOperation({summary: 'Get Specific User'})@ApiParam({name: 'id', type: 'number', required: false, description: 'User Id to Get Information of sepcific user', example: 109812})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of enteries returned per request', example: 10})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Get All User Here'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:15\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            Public\n                        postUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    postUser(req: any)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Add Users To Website'})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:45\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                req\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, DefaultValuePipe, Get, Param, ParseIntPipe, Post, Query } from '@nestjs/common';\nimport { ApiOperation, ApiParam, ApiQuery, ApiTags } from '@nestjs/swagger';\nimport { UserService } from './providers/users.service';\n\n@ApiTags(\"Users\")\n@Controller('users')\nexport class UsersController {\n\n    constructor(private readonly usersService: UserService) { }\n\n    @Get()\n    @ApiOperation({\n        summary: \"Get All User Here\"\n    })\n    public getUsers() {\n        return this.usersService.findAll()\n    }\n    @Get(\"/:id/\")\n    @ApiOperation({\n        summary: \"Get Specific User\"\n    })\n    @ApiParam({\n        name: \"id\",\n        type: \"number\",\n        required: false,\n        description: \"User Id to Get Information of sepcific user\",\n        example: 109812\n    })\n    @ApiQuery({\n        name: \"limit\",\n        type: \"number\",\n        required: false,\n        description: \"The number of enteries returned per request\",\n        example: 10\n    })\n    public getNewUser(@Param('id', ParseIntPipe) id: number, @Query('limit', new DefaultValuePipe(10), ParseIntPipe)\n    limit: number) {\n        return this.usersService.findOnyById(id)\n    }\n\n    @Post()\n    @ApiOperation({\n        summary: \"Add Users To Website\"\n    })\n    public postUser(@Body() req: any) {\n        console.log(req)\n        return \"You send the post request to the user route\"\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUserService\n\nUserService\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './providers/users.service';\nimport { UsersController } from './users.controller';\n\n@Module({\n  controllers: [UsersController],\n  providers: [UserService]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/post.controller.ts\n            \n            controller\n            PostController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/post.service.ts\n            \n            injectable\n            PostService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @nestjs/common : ^11.0.1\n        \n            @nestjs/core : ^11.0.1\n        \n            @nestjs/platform-express : ^11.0.1\n        \n            @nestjs/swagger : ^11.1.5\n        \n            reflect-metadata : ^0.2.2\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g @nestjs/mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPostsModule\n\nPostsModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nPostService\n\nPostService\n\nPostsModule -->\n\nPostService->PostsModule\n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
